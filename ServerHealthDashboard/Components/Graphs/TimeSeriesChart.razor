<MudPaper Class="doc-section-component-container">
    <MudTimeSeriesChart ChartSeries="@_series"
                        @bind-SelectedIndex="_index"
                        Width="@_width"
                        Height="@_height"
                        Style="background-color:#24272f;"
                        ChartOptions="@_options"
                        AxisChartOptions="@_axisChartOptions"
                        TimeLabelSpacing="TimeSpan.FromMinutes(5)"
                        TimeLabelSpacingRounding="_roundedLabelSpacing"
                        TimeLabelSpacingRoundingPadSeries="_roundedLabelSpacingPadSeries"
                        DataMarkerTooltipTimeLabelFormat="yyyy MMM dd HH:mm:ss" />
</MudPaper>

@code
{
    private int _index = -1;
    private ChartOptions _options = new ChartOptions
        {
            YAxisLines = false,
            YAxisTicks = 500,
            MaxNumYAxisTicks = 10,
            YAxisRequireZeroPoint = true,
            XAxisLines = false,
            LineStrokeWidth = 1,
            ShowLegend = false
        };

    private AxisChartOptions _axisChartOptions = new() { };

    private TimeSeriesChartSeries _chart1 = new();

    private List<TimeSeriesChartSeries> _series = new();

    private readonly Random _random = new Random();

    private bool _roundedLabelSpacing = false;
    private bool _roundedLabelSpacingPadSeries = false;

    private string _width = "100%";
    private string _height = "420px";

    protected override void OnInitialized()
    {
        base.OnInitialized();

        var now = DateTime.Now;
        _chart1 = new TimeSeriesChartSeries
            {
                Index = 0,
                Data = Enumerable.Range(-360, 360).Select(x => new TimeSeriesChartSeries.TimeValue(now.AddSeconds(x * 10), _random.Next(0, 16000))).ToList(),
                LineDisplayType = LineDisplayType.Line,
                DataMarkerTooltipTitleFormat = "{{X_VALUE}}",
                DataMarkerTooltipSubtitleFormat = "{{Y_VALUE}}"
            };
        _series.Add(_chart1);
        StateHasChanged();
    }
}